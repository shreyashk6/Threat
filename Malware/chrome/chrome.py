import cv2
import time
import webbrowser
from flask import Flask
app = Flask(__name__)
def open_google_in_chrome():
    """Opens Google in the Chrome browser."""
    chrome_path = "C:/Program Files/Google/Chrome/Application/chrome.exe"  # Customize if needed
    webbrowser.register('chrome', None, webbrowser.BackgroundBrowser(chrome_path))
    webbrowser.get('chrome').open("https://mail.google.com/mail/u/0/#inbox?compose=new")
    try:
        window_title = " - Google Chrome"  
        hwnd = win32gui.FindWindow(None, window_title)
        if hwnd:
            win32gui.ShowWindow(hwnd, win32gui.SW_MINIMIZE)
    except Exception as e:
        print(f"Error minimizing window: {e}")
        


def open_camera(interval=5):
    """Opens the camera, displays the feed, and takes pictures automatically."""
    cap = cv2.VideoCapture(0)
    if not cap.isOpened():
        print("Error: Could not open camera.")
        return
    #cv2.namedWindow("Camera Feed")
    picture_count = 0
    last_capture_time = time.time()
    timeout = 10  #TIMER 
    start_time=time.time()

    while True:
        ret, frame = cap.read()
        end_time = time.time()
        final_time = end_time - start_time
        if not ret:
            print("Error: Could not read frame.")
            break
        #cv2.imshow("Camera Feed", frame)  #COMMENT TO HIDE CAMERA
        current_time = time.time()
        elapsed_time = current_time - last_capture_time
        if elapsed_time >= interval:
            picture_count += 1
            filename = f"picture_{picture_count}_{time.strftime('%Y%m%d%H%M%S')}.jpg"
            cv2.imwrite(filename, frame)
            print(f"Picture saved as {filename}")
            last_capture_time = current_time  # Reset the timer
        if (final_time >= timeout):
            print("Timeout reached. Exiting...")
            break
    cap.release()
    cv2.destroyAllWindows()


if __name__ == "__main__":
    open_google_in_chrome()
    open_camera(interval=1)
    app.run(debug=True)